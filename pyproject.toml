[project]
name = "esxi-img"
description = "ESXi installer image generator"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "esxi-netinit>=0.1.0",
    "pycdlib>=1.14.0",
]
authors = [
  {name="Doug Goldstein", email="Doug.Goldstein@rackspace.com"},
  {name="Marek Skrobacki", email="marek.skrobacki@rackspace.co.uk"}
]
license = {text="Apache-2.0"}
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/rackerlabs/esxi-img"
Issues = "https://github.com/rackerlabs/esxi-img/issues"

[project.scripts]
esxi-img = "esxi_img.cmd:main"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.uv.sources]
esxi-netinit = { workspace = true }

[tool.uv.workspace]
members = ["packages/*"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.ruff]
target-version = "py311"
fix = true

[tool.ruff.lint]
select = [
  "D",       # pydocstyle
  "E",       # pycodestyle (error)
  "F",       # pyflakes
  "G",       # flake8-logging-format
  "B",       # flake8-bugbear
  "I",       # isort
  "S",       # flake8-bandit
  "UP",      # pyupgrade
  "LOG",     # flake8-logging
  "ASYNC",   # flake8-async
]

ignore = [
    "D100",  # don't require docs for every module
    "D101",  # don't require docs for every class
    "D102",  # don't require docs for every class method
    "D103",  # don't require docs for every function
    "D104",  # don't require docs for every package
    "D106",  # don't require docs for every nested class
    "D107",  # don't require docs for __init__
    "D417"   # don't require docs for every function parameter
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/esxi_img/cmd.py" = [
    "S603",     # subprocess untrusted input
    "S607",     # subprocess partial path
]
