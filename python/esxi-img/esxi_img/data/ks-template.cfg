vmaccepteula
install --firstdisk=DELL,hpsa,local --overwritevmfs
reboot

network --bootproto=dhcp

%include /tmp/rootpw

%pre --interpreter=busybox
for disk in /dev/disk/*; do
    partedUtil fix "$disk" || true
done

# load the driver to access the configdrive
localcli system module load --module iso9660

# get all actual hardware devices
disks=$(find /dev/disks -type f -exec basename {} \;)

for disk in $disks; do
    vsish -e set /vmkModules/iso9660/mount "$disk"
    # "config-2" is the label of the configdrive
    if test -e '/vmfs/volumes/config-2'; then
        echo "$disk" > /tmp/configdrive
        echo "Copying file from configdrive to tmpdir"
        mkdir -p /tmp/config-2
        cd /vmfs/volumes/config-2 || exit 1
        cp -a ./ /tmp/config-2
        break
    else
        vsish -e set '/vmkModules/iso9660/umount' "$disk"
    fi
done

%pre --interpreter=python
import json

input_file = "/vmfs/volumes/config-2/openstack/latest/meta_data.json"
# this output file has to be referenced in ../main.cfg
output_file = "/tmp/rootpw"

with open(input_file) as f:
    meta_data = json.load(f)

with open(output_file, "w") as f:
    f.write("rootpw {}\n".format(meta_data["admin_pass"]))

%pre --interpreter=busybox
# unmount the configdrive
vsish -e set '/vmkModules/iso9660/umount' "$(cat /tmp/configdrive)"

%post --interpreter=busybox
_bootbank=/vmfs/volumes/BOOTBANK1
boot_cfg="$_bootbank/boot.cfg"

# put everything in a nice tar.gz in the bootbank1
tar c -z -f "$_bootbank/config-2.tgz" -C /tmp config-2

# copy over the esxiimg tools. compress again because bootloader
# decompressed it at first stage
cat /tardisks/esxiimg.tgz | gzip -c > "$_bootbank/esxiimg.tgz"

# adjust the kernel command line to include the nice tar.gz
sed -i -e 's|^modules=\(.*\)|modules=\1 --- config-2.tgz --- esxiimg.tgz|g' "$boot_cfg"

%firstboot --interpreter=busybox
PYTHONPATH=/esxiimg python /esxiimg/netinit/main.py /config-2/openstack/latest/network_data.json
